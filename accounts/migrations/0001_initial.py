# Generated by Django 5.2 on 2025-04-29 08:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('referral_code', models.CharField(blank=True, max_length=20, unique=True)),
                ('referral_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('maturity_period', models.PositiveIntegerField(help_text='Maturity period in days')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('matured', 'Matured'), ('paired', 'Paired'), ('partially_paid', 'Partially Paid'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('return_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('referral_bonus_used', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('last_payment_at', models.DateTimeField(blank=True, null=True)),
                ('start_countdown_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_reference', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_notes', models.TextField(blank=True)),
                ('amount_remaining', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('queue_position', models.PositiveIntegerField(blank=True, null=True)),
                ('queued_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_pairing_time', models.DateTimeField(blank=True, null=True)),
                ('queue_priority', models.PositiveIntegerField(choices=[(0, 'Normal'), (1, 'High'), (2, 'Urgent'), (3, 'Critical')], default=0)),
                ('queue_notes', models.TextField(blank=True)),
                ('last_queue_update', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failed_matches', models.PositiveIntegerField(default=0)),
                ('last_match_attempt', models.DateTimeField(blank=True, null=True)),
                ('preferred_pairing_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_wait_time', models.PositiveIntegerField(default=7, help_text='Maximum wait time in days')),
                ('matching_strategy', models.CharField(choices=[('exact', 'Exact Amount'), ('range', 'Amount Range'), ('flexible', 'Flexible'), ('percentage', 'Percentage Range'), ('multiple', 'Multiple Matches'), ('priority', 'Priority Based'), ('time_based', 'Time Based'), ('hybrid', 'Hybrid Strategy'), ('smart', 'Smart Matching'), ('predictive', 'Predictive Matching'), ('adaptive', 'Adaptive Matching')], default='flexible', max_length=20)),
                ('amount_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('percentage_range', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage range for matching', max_digits=5, null=True)),
                ('max_matches', models.PositiveIntegerField(default=1, help_text='Maximum number of matches allowed')),
                ('current_matches', models.PositiveIntegerField(default=0)),
                ('match_attempt_history', models.JSONField(blank=True, default=list)),
                ('queue_history', models.JSONField(blank=True, default=list)),
                ('priority_history', models.JSONField(blank=True, default=list)),
                ('last_optimization_run', models.DateTimeField(blank=True, null=True)),
                ('optimization_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('user_priority_boost', models.PositiveIntegerField(default=0)),
                ('system_priority_boost', models.PositiveIntegerField(default=0)),
                ('match_compatibility_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('time_based_priority', models.BooleanField(default=False)),
                ('time_based_threshold', models.PositiveIntegerField(default=24, help_text='Hours threshold for time-based priority')),
                ('hybrid_strategy_weights', models.JSONField(blank=True, default=dict)),
                ('match_quality_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('match_efficiency_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('match_success_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('matching_criteria', models.JSONField(blank=True, default=list)),
                ('risk_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('volume_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('pattern_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('location_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('user_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('predictive_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('adaptive_weights', models.JSONField(blank=True, default=dict)),
                ('smart_matching_rules', models.JSONField(blank=True, default=dict)),
                ('pattern_history', models.JSONField(blank=True, default=list)),
                ('volume_history', models.JSONField(blank=True, default=list)),
                ('risk_history', models.JSONField(blank=True, default=list)),
                ('location_history', models.JSONField(blank=True, default=list)),
                ('user_history', models.JSONField(blank=True, default=list)),
                ('paired_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paired_investments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pairing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paired', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('paired_at', models.DateTimeField(auto_now_add=True)),
                ('matured_investment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matured_pairings', to='accounts.investment')),
                ('new_investment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_pairings', to='accounts.investment')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_code', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_invested', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bonus_earned', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('used', 'Used')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by_history', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
